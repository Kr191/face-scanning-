# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

services:
  app_frontend:
    build: ./react-facescanningapp
    volumes:
      - ./react-facescanningapp:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "5173:5173"

  face_api:
    build: ./fastapi
    command: uvicorn urls:api --host 0.0.0.0 --port 3001
    volumes:
      - ./fastapi:/code
    ports:
      - "3001:3001"

    environment:
      - MONGO_URI=mongodb://mongo:27017/

  mongo:
    image: mongo:6
    volumes:
      - ./mongo:/data/db
    ports:
      - "27017:27017"
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

